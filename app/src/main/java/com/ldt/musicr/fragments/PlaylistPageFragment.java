package com.ldt.musicr.fragments;

import android.app.Activity;
import android.graphics.Bitmap;
import android.os.AsyncTask;
import android.os.Bundle;
import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;

import com.ldt.musicr.InternalTools.AutoGeneratedPlaylistBitmap;
import com.ldt.musicr.R;
import com.ldt.musicr.activities.SupportFragmentPlusActivity;
import com.ldt.musicr.adapters.SmallPlaylistAdapter;
import com.ldt.musicr.adapters.SmallSongListAdapter;
import com.ldt.musicr.dataloaders.SongLoader;
import com.ldt.musicr.models.Album;
import com.ldt.musicr.models.Playlist;
import com.ldt.musicr.models.Song;

import java.util.List;

public class PlaylistPageFragment extends FragmentPlus {
    @Override
    public void onTransitionComplete() {

    }
    String Title, Artist;
    List<Song> arraylist;
    public void set(List<Song> list,String title,String artist) {
        this.arraylist = list;
        this.Title = title;
        this.Artist = artist;
    }
    @Override
    public StatusTheme setDefaultStatusTheme() {
        return StatusTheme.BlackIcon;
    }
    public enum ListType {
        ALBUM,PLAYLIST
    }
    ListType type;
    Playlist playlist;
    Album album;
    int position;
    public static PlaylistPageFragment Initialize(Activity activity, Playlist playlist, int position)
    {
        PlaylistPageFragment fragment = new PlaylistPageFragment();
        fragment.setFrameLayoutNTransitionType(activity, SupportFragmentPlusActivity.TransitionType.RIGHT_LEFT);
     fragment.type =ListType.PLAYLIST;
     fragment.playlist = playlist;
     fragment.position = position;
        return fragment;
    }
    public static PlaylistPageFragment Initialize(Activity activity, Album album, int position)
    {
        PlaylistPageFragment fragment = new PlaylistPageFragment();
        fragment.setFrameLayoutNTransitionType(activity, SupportFragmentPlusActivity.TransitionType.RIGHT_LEFT);
        fragment.type = ListType.ALBUM;
        fragment.album = album;
        fragment.position = position;
        return fragment;
    }
    RecyclerView recyclerView;
    SmallSongListAdapter songListAdapter;
    ImageView imageView;
    TextView titleView,artistView;
    Bitmap bitmap;
    @Nullable
    @Override
    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        rootView = inflater.inflate( R.layout.playlist_pager_v2,container,false);
        recyclerView = rootView.findViewById(R.id.playlist_big_rv);
        imageView = rootView.findViewById(R.id.playlist_pager_image);
        titleView = rootView.findViewById(R.id.playlist_pager_title);
        artistView = rootView.findViewById(R.id.playlist_pager_artist);
        new loadSong().execute();
       return rootView;
    }
    private class loadSong extends AsyncTask<Void,Void,Void> {
        @Override
        protected void onPostExecute(Void aVoid) {
         recyclerView.setAdapter(songListAdapter);
         recyclerView.setLayoutManager(new LinearLayoutManager(getActivity()));
         imageView.setImageBitmap(bitmap);
         titleView.setText(Title);
         artistView.setText(Artist);
        }

        @Override
        protected Void doInBackground(Void... voids) {
           // if(type==ListType.PLAYLIST) {
                arraylist = SmallPlaylistAdapter.getPlaylistWithListID(getActivity(), position,playlist.id);
           // }
            Title = playlist.name;
            Artist = "Various Artist";
            bitmap = AutoGeneratedPlaylistBitmap.getBitmap(getActivity(),arraylist,true,false);
                songListAdapter = new SmallSongListAdapter((AppCompatActivity) getActivity(), arraylist, false, false);
          return null;
        }
    }
}
